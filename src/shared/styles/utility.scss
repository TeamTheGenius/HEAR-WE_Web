@use './spacing-system' as spaceValue;
@use './font-value' as fontValue;
@use './font-system' as fontSystem;
@use './color-system' as colorSystem;
@use 'sass:map';

$spacing-sizes: (
  xxs: spaceValue.$xxs,
  xs: spaceValue.$xs,
  sm: spaceValue.$sm,
  md: spaceValue.$md,
  lg: spaceValue.$lg,
  xl: spaceValue.$xl,
  xxl: spaceValue.$xxl,
);

@each $key, $value in fontSystem.$text {
  .#{$key} {
    $style: map.get(fontSystem.$text, $key);
    font-size: map.get($style, 'size');
    font-weight: map.get($style, 'weight');
    font-family: fontValue.$font-family;
  }
}

@each $key, $value in colorSystem.$light-text {
  .#{$key} {
    color: var(--#{$key});
  }
}

@each $key, $value in colorSystem.$light-surface {
  .#{$key} {
    background-color: var(--#{$key});
  }
}

.w-full {
  width: 100%;
}

@each $size, $value in $spacing-sizes {
  // ðŸ“Œ Margin
  .m-#{$size} {
    margin: $value;
  }
  .mt-#{$size} {
    margin-top: $value;
  }
  .mb-#{$size} {
    margin-bottom: $value;
  }
  .ml-#{$size} {
    margin-left: $value;
  }
  .mr-#{$size} {
    margin-right: $value;
  }
  .my-#{$size} {
    margin-top: $value;
    margin-bottom: $value;
  }
  .mx-#{$size} {
    margin-left: $value;
    margin-right: $value;
  }

  // ðŸ“Œ Padding
  .p-#{$size} {
    padding: $value;
  }
  .pt-#{$size} {
    padding-top: $value;
  }
  .pb-#{$size} {
    padding-bottom: $value;
  }
  .pl-#{$size} {
    padding-left: $value;
  }
  .pr-#{$size} {
    padding-right: $value;
  }
  .py-#{$size} {
    padding-top: $value;
    padding-bottom: $value;
  }
  .px-#{$size} {
    padding-left: $value;
    padding-right: $value;
  }

  // ðŸ“Œ Gap
  .gap-#{$size} {
    gap: $value;
  }
}

// ðŸ“Œ Flexbox
.flex {
  display: flex;
}
.inline-flex {
  display: inline-flex;
}

.flex-row {
  flex-direction: row;
}
.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}
.flex-nowrap {
  flex-wrap: nowrap;
}

.justify-start {
  justify-content: flex-start;
}
.justify-center {
  justify-content: center;
}
.justify-end {
  justify-content: flex-end;
}
.justify-between {
  justify-content: space-between;
}
.justify-around {
  justify-content: space-around;
}
.justify-evenly {
  justify-content: space-evenly;
}

.items-start {
  align-items: flex-start;
}
.items-center {
  align-items: center;
}
.items-end {
  align-items: flex-end;
}
.items-stretch {
  align-items: stretch;
}

.self-start {
  align-self: flex-start;
}
.self-center {
  align-self: center;
}
.self-end {
  align-self: flex-end;
}
.self-stretch {
  align-self: stretch;
}

.content-start {
  align-content: flex-start;
}
.content-center {
  align-content: center;
}
.content-end {
  align-content: flex-end;
}
.content-between {
  align-content: space-between;
}
.content-around {
  align-content: space-around;
}
.content-evenly {
  align-content: space-evenly;
}
